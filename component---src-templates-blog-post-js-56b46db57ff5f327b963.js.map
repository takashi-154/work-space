{"version":3,"sources":["webpack://work-space/./src/components/head.js","webpack://work-space/./src/templates/blog-post.js"],"names":["Head","title","description","lang","data","meta","useStaticQuery","Helmet","htmlAttributes","name","content","site","siteMetadata","siteUrl","image","property","twitterUsername","defaultProps","props","post","contentfulBlogPost","siteTitle","getImage","heroImage","location","className","G","alt","publishDate","dangerouslySetInnerHTML","__html","body","childMarkdownRemark","html"],"mappings":"0NAIMA,EAAO,SAAC,GAAwC,IAAtCC,EAAqC,EAArCA,MAAOC,EAA8B,EAA9BA,YAAaC,EAAiB,EAAjBA,KAE1BC,GAF2C,EAAXC,MAEzBC,QAAe,aAc5B,OACI,gBAACC,EAAA,EAAD,CACAC,eAAgB,CACZL,QAEJF,MAAK,GAAKA,EACVC,YAAW,GAAKA,EAChBG,KAAM,CACF,CACAI,KAAK,cACLC,QAASR,GAET,CACAO,KAAK,QACLC,QAAQ,GAAIN,EAAKO,KAAKC,aAAaC,QAAUT,EAAKO,KAAKC,aAAaE,OAEpE,CACAL,KAAK,YACLC,QAAQ,GAAIN,EAAKO,KAAKC,aAAaC,QAAUT,EAAKO,KAAKC,aAAaE,OAEpE,CACAC,SAAS,SACTL,QAASN,EAAKO,KAAKC,aAAaC,SAEhC,CACAE,SAAS,UACTL,QAAQ,WAER,CACAK,SAAS,WACTL,QAAST,GAET,CACAc,SAAS,iBACTL,QAASR,GAET,CACAa,SAAS,WACTL,QAAQ,GAAIN,EAAKO,KAAKC,aAAaC,QAAUT,EAAKO,KAAKC,aAAaE,OAEpE,CACAL,KAAK,eACLC,QAAQ,WAER,CACAD,KAAK,kBACLC,QAASN,EAAKO,KAAKC,aAAaI,iBAEhC,CACAP,KAAK,gBACLC,QAAST,GAET,CACAQ,KAAK,sBACLC,QAASR,GAET,CACAa,SAAS,gBACTL,QAAQ,GAAIN,EAAKO,KAAKC,aAAaC,QAAUT,EAAKO,KAAKC,aAAaE,WAOhFd,EAAKiB,aAAe,CAChBd,KAAK,KACLE,KAAM,GACNJ,MAAM,UACNC,YAAY,4CAGhB,QChDA,EApCyB,SAAAgB,GACvB,IAAMC,EAAOD,EAAMd,KAAKgB,mBAClBC,EAAYH,EAAMd,KAAKO,KAAKC,aAAaX,MAGzCa,GAFWI,EAAMd,KAAKO,KAAKC,aAAaV,aAEhCoB,OAASH,EAAKI,YAE5B,OACE,gBAAC,IAAD,CAAQC,SAAUN,EAAMM,UACtB,uBAAKC,UAAU,IACb,gBAAC,EAAD,CACExB,MAAUkB,EAAKlB,MAAV,MAAqBoB,EAC1BnB,YAAW,GAAKiB,EAAKjB,YAAYA,cAEnC,2BACE,gBAAC,EAAAwB,EAAD,CACEC,IAAKR,EAAKlB,MACVa,MAAOA,KAGX,uBAAKW,UAAU,2BACb,sBAAIA,UAAU,cAAcN,EAAKlB,OACjC,qBAAGwB,UAAU,iBAAiBN,EAAKS,aACnC,uBAAKH,UAAU,WACb,uBACEI,wBAAyB,CACvBC,OAAQX,EAAKY,KAAKC,oBAAoBC","file":"component---src-templates-blog-post-js-56b46db57ff5f327b963.js","sourcesContent":["import React from 'react'\r\nimport { Helmet } from 'react-helmet'\r\nimport { graphql, useStaticQuery } from 'gatsby'\r\n\r\nconst Head = ({ title, description, lang, meta }) => {\r\n\r\n    const data = useStaticQuery(graphql`\r\n        query {\r\n            site {\r\n                siteMetadata {\r\n                    title\r\n                    siteUrl\r\n                    description\r\n                    image\r\n                    twitterUsername\r\n                }\r\n            }\r\n        }\r\n    `)\r\n\r\n    return (\r\n        <Helmet\r\n        htmlAttributes={{\r\n            lang,\r\n        }}\r\n        title={`${title}`}\r\n        description={`${description}`}\r\n        meta={[\r\n            {\r\n            name: `description`,\r\n            content: description,\r\n            },\r\n            {\r\n            name: `image`,\r\n            content: `${data.site.siteMetadata.siteUrl}${data.site.siteMetadata.image}`,\r\n            },\r\n            {\r\n            name: `thumbnail`,\r\n            content: `${data.site.siteMetadata.siteUrl}${data.site.siteMetadata.image}`,\r\n            },\r\n            {\r\n            property: `og:url`,\r\n            content: data.site.siteMetadata.siteUrl,\r\n            },\r\n            {\r\n            property: `og:type`,\r\n            content: `website`,\r\n            },\r\n            {\r\n            property: `og:title`,\r\n            content: title,\r\n            },\r\n            {\r\n            property: `og:description`,\r\n            content: description,\r\n            },\r\n            {\r\n            property: `og:image`,\r\n            content: `${data.site.siteMetadata.siteUrl}${data.site.siteMetadata.image}`,\r\n            },\r\n            {\r\n            name: `twitter:card`,\r\n            content: `summary`,\r\n            },\r\n            {\r\n            name: `twitter:creator`,\r\n            content: data.site.siteMetadata.twitterUsername,\r\n            },\r\n            {\r\n            name: `twitter:title`,\r\n            content: title,\r\n            },\r\n            {\r\n            name: `twitter:description`,\r\n            content: description,\r\n            },\r\n            {\r\n            property: `twitter:image`,\r\n            content: `${data.site.siteMetadata.siteUrl}${data.site.siteMetadata.image}`,\r\n            },\r\n        ]}\r\n        />\r\n    )\r\n}\r\n\r\nHead.defaultProps = {\r\n    lang: `ja`,\r\n    meta: [],\r\n    title: `わーくすぺーす`,\r\n    description: `天体撮影、キャンプ、ソフト開発 etc… いろんなことをゆる～くやっていきます。`,\r\n}\r\n\r\nexport default Head;","import React from 'react'\r\nimport { graphql } from 'gatsby'\r\nimport { Helmet } from 'react-helmet'\r\nimport get from 'lodash/get'\r\nimport { GatsbyImage, getImage } from 'gatsby-plugin-image'\r\nimport Layout from '../components/layout'\r\nimport Head from '../components/head'\r\n\r\nconst BlogPostTemplate = props => {\r\n  const post = props.data.contentfulBlogPost\r\n  const siteTitle = props.data.site.siteMetadata.title\r\n  const siteDesc = props.data.site.siteMetadata.description\r\n\r\n  const image = getImage(post.heroImage)\r\n\r\n  return (\r\n    <Layout location={props.location}>\r\n      <div className=\"\">\r\n        <Head \r\n          title={`${post.title} | ${siteTitle}`} \r\n          description={`${post.description.description}`} \r\n        />\r\n        <div>\r\n          <GatsbyImage\r\n            alt={post.title}\r\n            image={image}\r\n          />\r\n        </div>\r\n        <div className=\"container is-fluid py-6\">\r\n          <h1 className=\"title is-2\">{post.title}</h1>\r\n          <p className=\"subtitle is-5\">{post.publishDate}</p>\r\n          <div className=\"content\">\r\n            <div \r\n              dangerouslySetInnerHTML={{\r\n                __html: post.body.childMarkdownRemark.html,\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default BlogPostTemplate\r\n\r\nexport const pageQuery = graphql`\r\n  query BlogPostBySlug($slug: String!) {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n        description\r\n      }\r\n    }\r\n    contentfulBlogPost(slug: { eq: $slug }) {\r\n      title\r\n      description {\r\n        description\r\n      }\r\n      publishDate(formatString: \"MMMM Do, YYYY\")\r\n      heroImage {\r\n        gatsbyImageData(width: 1180, layout: FULL_WIDTH)\r\n      }\r\n      body {\r\n        childMarkdownRemark {\r\n          html\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"sourceRoot":""}