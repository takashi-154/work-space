{"version":3,"sources":["webpack://work-space/./src/pages/astrograph.js"],"names":["props","siteTitle","data","site","siteMetadata","title","posts","description","allContentfulBlogPost","edges","location","className","map","node","key","slug","article"],"mappings":"oMAsCA,UA9BwB,SAAAA,GACtB,IAAMC,EAAYD,EAAME,KAAKC,KAAKC,aAAaC,MAEzCC,GADkBN,EAAME,KAAKC,KAAKC,aAAaG,YACvCP,EAAME,KAAKM,sBAAsBC,OAE/C,OACE,gBAAC,IAAD,CAAQC,SAAUV,EAAMU,UACtB,uBAAKC,UAAU,IACb,gBAAC,IAAD,CACEN,MAAK,UAAYJ,EACjBM,YAAW,wBAEb,gBAAC,IAAD,MACA,uBAAKI,UAAU,2BACb,sBAAIA,UAAU,2BAAd,aACA,sBAAIA,UAAU,wBACXL,EAAMM,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACZ,OACE,sBAAIF,UAAU,4DAA4DG,IAAKD,EAAKE,MAClF,gBAAC,IAAD,CAAgBC,QAASH","file":"component---src-pages-astrograph-js-50aa11c9504f81074b62.js","sourcesContent":["import React from 'react'\nimport { Link, graphql } from 'gatsby'\nimport get from 'lodash/get'\nimport Layout from '../components/layout'\nimport Head from '../components/head'\nimport Hero from '../components/hero'\nimport ArticlePreview from '../components/article-preview'\n\nconst AstrographIndex = props => {\n  const siteTitle = props.data.site.siteMetadata.title\n  const siteDescription = props.data.site.siteMetadata.description\n  const posts = props.data.allContentfulBlogPost.edges\n\n  return (\n    <Layout location={props.location}>\n      <div className=\"\">\n        <Head \n          title={`天体写真 | ${siteTitle}`} \n          description={`投稿された天体写真記事の一覧ページです`}\n        />\n        <Hero />\n        <div className=\"container is-fluid py-6\">\n          <h1 className=\"notification title is-4\">天体写真 記事一覧</h1>\n          <ul className=\"columns is-multiline\">\n            {posts.map(({ node }) => {\n              return (\n                <li className=\"column is-one-third-desktop is-half-tablet is-full-mobile\" key={node.slug}>\n                  <ArticlePreview article={node} />\n                </li>\n              )\n            })}\n          </ul>\n        </div>\n      </div>\n    </Layout>\n  )\n}\n\nexport default AstrographIndex\n\nexport const pageQuery = graphql`\n  query AstrographIndexQuery {\n    site {\n      siteMetadata {\n        title\n        description\n      }\n    }\n    allContentfulBlogPost(\n      sort: { fields: [publishDate], order: DESC }\n      filter: { tags: {in: \"Astrograph\"} }\n      ) {\n      edges {\n        node {\n          title\n          slug\n          publishDate(formatString: \"MMMM Do, YYYY\")\n          tags\n          heroImage {\n            gatsbyImageData(width: 350, height: 196, layout: FULL_WIDTH)\n          }\n          description {\n            childMarkdownRemark {\n              html\n            }\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}