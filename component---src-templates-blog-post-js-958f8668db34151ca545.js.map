{"version":3,"sources":["webpack:///./src/components/head.js","webpack:///./src/templates/blog-post.js"],"names":["Head","title","description","image","lang","data","meta","useStaticQuery","Helmet","htmlAttributes","site","siteMetadata","name","content","author","property","siteUrl","defaultProps","BlogPostTemplate","props","post","contentfulBlogPost","siteTitle","siteDesc","location","className","heroImage","fluid","alt","publishDate","dangerouslySetInnerHTML","__html","body","childMarkdownRemark","html"],"mappings":"gMAIMA,EAAO,SAAC,GAA+C,IAA7CC,EAA4C,EAA5CA,MAAOC,EAAqC,EAArCA,YAAaC,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,KAEjCC,GAFkD,EAAXC,KAEhCC,YAAe,eAY5B,OACI,kBAACC,EAAA,EAAD,CACAC,eAAgB,CACZL,QAEJH,MAAUA,EAAL,MAAgBI,EAAKK,KAAKC,aAAaV,MAC5CC,YAAgBA,EAAL,MAAsBG,EAAKK,KAAKC,aAAaT,YACxDC,MAAK,GAAKA,EACVG,KAAM,CACF,CACAM,KAAK,cACLC,QAASX,GAET,CACAU,KAAK,eACLC,QAAQ,WAER,CACAD,KAAK,kBACLC,QAASR,EAAKK,KAAKC,aAAaG,QAEhC,CACAC,SAAS,WACTF,QAAYR,EAAKK,KAAKC,aAAaK,QAA5B,oBAEP,CACAD,SAAS,WACTF,QAASZ,GAET,CACAc,SAAS,iBACTF,QAASX,GAET,CACAa,SAAS,UACTF,QAAQ,WAER,CACAD,KAAK,YACLC,QAAYR,EAAKK,KAAKC,aAAaK,QAA5B,oBAEP,CACAJ,KAAK,gBACLC,QAASZ,GAET,CACAW,KAAK,sBACLC,QAASX,GAET,CACAa,SAAS,UACTF,QAAQ,eAOpBb,EAAKiB,aAAe,CAChBb,KAAK,KACLE,KAAM,GACNJ,YAAY,IAGDF,QCvCAkB,UAnCU,SAAAC,GACvB,IAAMC,EAAOD,EAAMd,KAAKgB,mBAClBC,EAAYH,EAAMd,KAAKK,KAAKC,aAAaV,MACzCsB,EAAWJ,EAAMd,KAAKK,KAAKC,aAAaT,YAE9C,OACE,kBAAC,IAAD,CAAQsB,SAAUL,EAAMK,UACtB,yBAAKC,UAAU,IACb,kBAAC,EAAD,CACExB,MAAUmB,EAAKnB,MAAV,MAAqBqB,EAC1BpB,YAAgBkB,EAAKlB,YAAV,MAA2BqB,EACtCpB,MAAOiB,EAAKM,UAAUC,QAExB,6BACE,kBAAC,IAAD,CACEC,IAAKR,EAAKnB,MACV0B,MAAOP,EAAKM,UAAUC,SAG1B,yBAAKF,UAAU,2BACb,wBAAIA,UAAU,cAAcL,EAAKnB,OACjC,uBAAGwB,UAAU,iBAAiBL,EAAKS,aACnC,yBAAKJ,UAAU,WACb,yBACEK,wBAAyB,CACvBC,OAAQX,EAAKY,KAAKC,oBAAoBC","file":"component---src-templates-blog-post-js-958f8668db34151ca545.js","sourcesContent":["import React from 'react'\r\nimport { Helmet } from 'react-helmet'\r\nimport { graphql, useStaticQuery } from 'gatsby'\r\n\r\nconst Head = ({ title, description, image, lang, meta }) => {\r\n\r\n    const data = useStaticQuery(graphql`\r\n        query {\r\n            site {\r\n                siteMetadata {\r\n                    title\r\n                    siteUrl\r\n                    description\r\n                }\r\n            }\r\n        }\r\n    `)\r\n\r\n    return (\r\n        <Helmet\r\n        htmlAttributes={{\r\n            lang,\r\n        }}\r\n        title={`${title} | ${data.site.siteMetadata.title}`}\r\n        description={`${description} | ${data.site.siteMetadata.description}`}\r\n        image={`${image}`}\r\n        meta={[\r\n            {\r\n            name: `description`,\r\n            content: description,\r\n            },\r\n            {\r\n            name: `twitter:card`,\r\n            content: `summary`,\r\n            },\r\n            {\r\n            name: `twitter:creator`,\r\n            content: data.site.siteMetadata.author,\r\n            },\r\n            {\r\n            property: `og:image`,\r\n            content: `${data.site.siteMetadata.siteUrl}/images/tube.png`,\r\n            },\r\n            {\r\n            property: `og:title`,\r\n            content: title,\r\n            },\r\n            {\r\n            property: `og:description`,\r\n            content: description,\r\n            },\r\n            {\r\n            property: `og:type`,\r\n            content: `website`,\r\n            },\r\n            {\r\n            name: `thumbnail`,\r\n            content: `${data.site.siteMetadata.siteUrl}/images/tube.png`,\r\n            },\r\n            {\r\n            name: `twitter:title`,\r\n            content: title,\r\n            },\r\n            {\r\n            name: `twitter:description`,\r\n            content: description,\r\n            },\r\n            {\r\n            property: `og:type`,\r\n            content: `website`,\r\n            },\r\n        ]}\r\n        />\r\n    )\r\n}\r\n\r\nHead.defaultProps = {\r\n    lang: `ja`,\r\n    meta: [],\r\n    description: ``,\r\n}\r\n\r\nexport default Head;","import React from 'react'\r\nimport { graphql } from 'gatsby'\r\nimport { Helmet } from 'react-helmet'\r\nimport get from 'lodash/get'\r\nimport Img from 'gatsby-image'\r\nimport Layout from '../components/layout'\r\nimport Head from '../components/head'\r\n\r\nconst BlogPostTemplate = props => {\r\n  const post = props.data.contentfulBlogPost\r\n  const siteTitle = props.data.site.siteMetadata.title\r\n  const siteDesc = props.data.site.siteMetadata.description\r\n\r\n  return (\r\n    <Layout location={props.location}>\r\n      <div className=\"\">\r\n        <Head \r\n          title={`${post.title} | ${siteTitle}`} \r\n          description={`${post.description} | ${siteDesc}`} \r\n          image={post.heroImage.fluid}\r\n        />\r\n        <div>\r\n          <Img\r\n            alt={post.title}\r\n            fluid={post.heroImage.fluid}\r\n          />\r\n        </div>\r\n        <div className=\"container is-fluid py-6\">\r\n          <h1 className=\"title is-2\">{post.title}</h1>\r\n          <p className=\"subtitle is-5\">{post.publishDate}</p>\r\n          <div className=\"content\">\r\n            <div \r\n              dangerouslySetInnerHTML={{\r\n                __html: post.body.childMarkdownRemark.html,\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default BlogPostTemplate\r\n\r\nexport const pageQuery = graphql`\r\n  query BlogPostBySlug($slug: String!) {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n        description\r\n      }\r\n    }\r\n    contentfulBlogPost(slug: { eq: $slug }) {\r\n      title\r\n      publishDate(formatString: \"MMMM Do, YYYY\")\r\n      heroImage {\r\n        fluid(maxWidth: 1180, background: \"rgb:000000\") {\r\n          ...GatsbyContentfulFluid_tracedSVG\r\n        }\r\n      }\r\n      body {\r\n        childMarkdownRemark {\r\n          html\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"sourceRoot":""}